<?php
/**
 * Created by PhpStorm.
 * User: joy
 * Date: 18-1-7
 * Time: 上午9:05
 */

namespace app\publish\controller;
use app\common\controller\Base;
use app\common\exception\JsonErrorException;
use app\common\model\joom\JoomProduct;
use app\publish\service\CommonService;
use app\publish\service\JoomService;
use app\publish\validate\JoomValidater;
use think\Exception;
use think\Request;
use app\common\service\Common;
/**
 * @module 刊登系统
 * @title joom刊登控制器
 * Class joom
 * packing app\publish\controller
 */
class Joom extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * @title joom敏感货
     * @url /publish/joom/dangerous-kind
     * @access public
     * @method GET
     * @param array $request
     * @output think\Response
     */
    public function dangerousKind(){
        $data = JoomProduct::KINGS;
        return json($data);
    }
    /**
     * @title joom导出
     * @url /publish/joom/download
     * @access public
     * @method post
     * @param array $request
     * @output think\Response
     */
    public function download(Request $request){
        $ids = $request->param('ids');
        if(empty($ids)){
            return json(['message'=>'请选择你要导出的数据'],400);
        }
        $response = (new JoomService())->dowonload($ids);
        return json($response);
    }

    /**
     * @title 获取joom待刊登商品列表
     * @url /publish/joom/productList
     * @apiRelate app\publish\controller\JoomCategory::category
     * @access public
     * @method get
     * @param Request $request
     * @return \think\response\Json
     */
    public function productList(Request $request)
    {

        try {

            $page = $request->get('page', 1);
            $pageSize = $request->get('pageSize', 50);
            $param = $request->param();
            $fields = "*";
            $response = (new JoomService())->getUnpublishList($param, $page, $pageSize, $fields);

            if($response['code']==400)
            {
                return json($response['message'],$response['code']);
            }else{
                return json($response);
            }
        } catch (Exception $exp) {
            throw new JsonErrorException($exp->getFile() . $exp->getLine() . $exp->getMessage());
        }
    }
    /**
     * @title joom获取商品数据
     * @url /publish/joom/getData
     * @method get
     * @author joy
     * @access public
     * @return json
     */

    public function getData(Request $request)
    {
        try{
            $goods_id = $request->param('goods_id',0);
            if(empty($goods_id))
            {
                return json(['message'=>'商品id不正确'],400);
            }
            $response = (new JoomService())->getGoodsData($goods_id);
            return json($response);
        }catch (Exception $exp){
            throw new JsonErrorException("File:{$exp->getFile()};Line{$exp->getLine()};Message:{$exp->getMessage()}");
        }
    }
    /**
     * @title joom编辑修改
     * @url /publish/joom/edit/id/:id(\d+)/status/:status(\w+)
     * @method get
     * @author joy
     * @access public
     * @return json
     */
    public function edit(Request $request,$id,$status)
    {
        try{
            if(empty($id))
            {
                return json(['message'=>'id不正确'],400);
            }
            $response = (new JoomService())->getProductAndVariant($id,$status);
            return json($response);
        }catch (Exception $exp){
            throw new JsonErrorException("File:{$exp->getFile()};Line{$exp->getLine()};Message:{$exp->getMessage()}");
        }
    }
    /**
     * @title joom新增刊登提交数据
     * @url /publish/joom/add
     * @method post
     * @author joy
     * @access public
     * @return json
     */
    public function add(Request $request)
    {
        try{
            $post = $request->param();

            $post['uid'] = Common::getUserInfo($request) ? Common::getUserInfo($request)['user_id'] : 0;

            $service = new JoomService();
            $message = $service->validatePost($post);
            if($message)
            {
                return json(['message'=>$message],400);
            }
            $response = $service->insertData($post);
            if(is_numeric($response))
            {
                return json(['message'=>'成功提交['.$response.']条']);
            }else{
                return json(['message'=>$response],400);
            }

        }catch (Exception $exp){
            throw new JsonErrorException("File:{$exp->getFile()};Line{$exp->getLine()};Message:{$exp->getMessage()}");
        }

    }
    /**
     * @title joom更新刊登提交数据
     * @url /publish/joom/update
     * @method post
     * @author joy
     * @access public
     * @return json
     */
    public function update(Request $request)
    {
        try{

            //获取post过来的数据
            $post =$request->param();
            $service = new JoomService();
            $message = $service->validateUpdate($post);
            if($message)
            {
                return json(['message'=>$message],400);
            }
            $uid= Common::getUserInfo($request) ? Common::getUserInfo($request)['user_id'] : 0;

            $post['uid'] = $uid ;

            $response = $service->updateProductAndVariant($post);

            if($response['result'])
            {
                return json(['message'=>$response['message']]);
            }else{
                return json(['message'=>$response['message']],400);
            }
        }catch (Exception $exp){
            throw new JsonErrorException("File:{$exp->getFile()};Line:{$exp->getLine()};Message:{$exp->getMessage()}");
        }
    }

}