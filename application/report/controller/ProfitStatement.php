<?php
// +----------------------------------------------------------------------
// | 
// +----------------------------------------------------------------------
// | File  : ProfitStatement.php
// +----------------------------------------------------------------------
// | Author: LiuLianSen <3024046831@qq.com>
// +----------------------------------------------------------------------
// | Date  : 2017-08-04
// +----------------------------------------------------------------------

namespace app\report\controller;


use app\common\controller\Base;
use think\Request;
use \app\report\service\ProfitStatement as ProfitStatementService;
use app\common\exception\JsonConfirmException;

/**
 * Class ProfitStatement
 * @package app\report\controller
 * @module 报表系统
 * @title 平台利润报表
 * @url /report/financial/profit-statement
 */
class ProfitStatement extends Base
{
	/**
	 * @var ProfitStatementService
	 */
	protected $defServ;

	public function init()
	{
		parent::init(); // TODO: Change the autogenerated stub
		$this->defServ = new ProfitStatementService();
	}

	/**
	 * @title 平台利润列表
	 * @url /report/financial/profit-statement
	 * @method get
	 * @return \think\response\Json
	 */
	public function index(Request $request)
	{
		try{
			return json($this->defServ->search($request->param()));
		}catch (\Exception $ex){
			$code = $ex->getCode();
			$msg  = $ex->getMessage();
			if(!$code){
				$code = 500;
				$msg  = '程序内部错误';
			}
			return json(['message'=>$msg],$code);
		}
	}

	/**
	 * @title amazon平台利润列表
	 * @url /report/financial/profit-statement/amazon
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function amazon(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title wish平台利润列表
	 * @url /report/financial/profit-statement/wish
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function wish(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title fba平台利润列表
	 * @url /report/financial/profit-statement/fba
	 * @method get
	 * @param Request $request
	 * @return \think\response\Json
	 */
	public function fba(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title 速卖通平台利润列表
	 * @url /report/financial/profit-statement/ali-express
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function aliExpress(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title ebay平台利润列表
	 * @url /report/financial/profit-statement/ebay
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function ebay(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title joom平台利润列表
	 * @url /report/financial/profit-statement/joom
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function joom(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title lazada平台利润列表
	 * @url /report/financial/profit-statement/lazada
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function lazada(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title shopee平台利润列表
	 * @url /report/financial/profit-statement/shopee
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function shopee(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title paytm平台利润列表
	 * @url /report/financial/profit-statement/paytm
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function paytm(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title pandao平台利润列表
	 * @url /report/financial/profit-statement/pandao
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function pandao(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title walmart平台利润列表
	 * @url /report/financial/profit-statement/walmart
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function walmart(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title jumia平台利润列表
	 * @url /report/financial/profit-statement/jumia
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function jumia(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title vova平台利润列表
	 * @url /report/financial/profit-statement/vova
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function vova(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title umka平台利润列表
	 * @url /report/financial/profit-statement/umka
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function umka(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title cd平台利润列表
	 * @url /report/financial/profit-statement/cd
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function cd(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title newegg平台利润列表
	 * @url /report/financial/profit-statement/newegg
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function newegg(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title oberlo平台利润列表
	 * @url /report/financial/profit-statement/oberlo
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function oberlo(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title zoodmall平台利润列表
	 * @url /report/financial/profit-statement/zoodmall
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function zoodmall(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title yandex平台利润列表
	 * @url /report/financial/profit-statement/yandex
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function yandex(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title priceMinister平台利润列表
	 * @url /report/financial/profit-statement/price-Minister
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function priceMinister(Request $request)
	{
		return $this->index($request);
	}

	/**
	 * @title fummart平台利润列表
	 * @url /report/financial/profit-statement/fummart
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function fummart(Request $request)
	{
		return $this->index($request);
	}


	/**
	 * @title daraz平台利润列表
	 * @url /report/financial/profit-statement/daraz
	 * @method get
	 * @return \think\response\Json
	 * @apiFilter app\report\filter\ProfitStatementBySellerFilter
	 */
	public function daraz(Request $request)
	{
		return $this->index($request);
	}


	/**
	 * @title 订单平台利润列表导出接口
	 * @url /report/financial/export/profit-statement
	 * @method post
	 * @return \think\response\Json
	 * @param Request $request
	 */
	public function create(Request $request)
	{
		try{
			$this->defServ->applyExport($request->param());
			return json(['message'=> '申请成功']);
		}catch (\Exception $ex){
			$code = $ex->getCode();
			$msg  = $ex->getMessage();
			if(!$code){
				$code = 500;
				$msg  = '程序内部错误';
			}
			return json(['message'=>$msg],$code);
		}
	}


	/**
	 * @title 订单货品统计信息
	 * @author tanbin
	 * @apiParam name:order_id type:string desc:订单id
	 * @apiReturn sku:sku
	 * @apiReturn sku_id:sku id
	 * @apiReturn sku_quantity:货品数量
	 * @apiReturn cost:货品成本
	 * @url /report/financial/order/skus
	 * @method get
	 * @return \think\response\Json
	 */
	public function getOrderSkus(Request $request)
	{
		$params = $request->param();
		if(!param($params, 'order_id')){
			throw new JsonConfirmException('参数错误：订单号不能为空！');
		}
		$result = $this->defServ->getOrderSkus($params['order_id']);
		return json($result,200);
	}



}
