<?php
namespace service\alinew\operation;

use Exception;
use service\alinew\operation\Common;

/**
 * @desc 速卖通物流接口
 * @date 2018-04-08
 */

class ShippingMethod extends Common
{
    /**
     * @desc 获取物流信息
     * @return array $param 抓取后的数据信息
     * @throws Exception
     * @date 2018-04-08 10:56:11
     */
    public function getOnlineLogisticsInfo($param)
    {
        // 应用级别参数
        $data['order_id'] = $param['order_id'];
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('getOnlineLogisticsInfo');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 获取物流信息
     * @param string $shippingNumber 速卖通跟踪号
     * @return array $data 抓取后的数据信息
     * @throws Exception
     * @date 2018-04-08 14:35:11
     */
    public function getPrintInfo($shippingNumber)
    {
        // 应用级别参数
        $data['international_logistics_id'] = $shippingNumber;
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('getPrintInfo');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 物流商下单
     * @param array $data 提交数据
     * @return array $data 抓取后的数据信息
     * @throws Exception
     * @date 2018-04-08 14:35:11
     */
    public function createWarehouseOrder($data)
    {
        // 应用级别参数$data
        
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('createWarehouseOrder');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 卖家地址信息
     * @param array $data 提交数据
     * @return array $data 抓取后的数据信息
     * @throws Exception
     * @date 2018-04-08 14:35:11
     */
    public function getLogisticsSellerAddresses()
    {
        // 应用级别参数$data
        $data['seller_address_query'] = 'sender,pickup,refund';
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('getLogisticsSellerAddresses');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 获取信息
     * @param array $data 提交数据
     * @return array $data 抓取后的数据信息
     * @throws Exception
     * @date 2018-04-08 14:35:11
     */
    public function getShippingMethod()
    {
        // 应用级别参数$data
        $data = [];
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('listLogisticsService');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 根据交易订单获取线上发货物流服务列表
     * @author wangwei
     * @date 2018-12-24 16:46:22
     * @param unknown $orderId
     * @return unknown|ResultSet|mixed
     */
    public function getOnlineLogisticsServiceListByOrderId($orderId)
    {
        // 应用级别参数$data
        $data['order_id'] = $orderId;
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('getOnlineLogisticsServiceListByOrderId');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
    /**
     * @desc 查询物流订单信息
     * @author wangwei
     * @date 2018-12-24 11:17:57
     * @param array $params
     * @example $params = [
     *          'trade_order_id'=>'',//Y 交易订单号
     *          'domestic_logistics_num'=>'',//N 国内运单号
     *          'international_logistics_num'=>'',//N 国际运单号
     *          'gmt_create_end_str'=>'',//N 起始创建时间
     *          'gmt_create_start_str'=>'',//N 截止创建时间
     *          'logistics_status'=>'',//N 订单状态
     *          'warehouse_carrier_service'=>'',//N 物流服务编码
     *          'current_page'=>'1',//N 当前页
     *          'page_size'=>'50',//N 页面大小
     * ];
     * @return unknown|ResultSet|mixed
     */
    public function queryLogisticsOrderDetail($params)
    {
        // 应用级别参数$data
        $data = [
            'current_page'=>param($params, 'current_page',1),
            'page_size'=>param($params, 'page_size',50),
            'trade_order_id'=>param($params, 'trade_order_id'),
        ];
        if(isset($params['domestic_logistics_num'])){
            $data['domestic_logistics_num'] = $params['domestic_logistics_num'];
        }
        if(isset($params['international_logistics_num'])){
            $data['international_logistics_num'] = $params['international_logistics_num'];
        }
        if(isset($params['gmt_create_end_str'])){
            $data['gmt_create_end_str'] = $params['gmt_create_end_str'];
        }
        if(isset($params['gmt_create_start_str'])){
            $data['gmt_create_start_str'] = $params['gmt_create_start_str'];
        }
        if(isset($params['logistics_status'])){
            $data['logistics_status'] = $params['logistics_status'];
        }
        if(isset($params['warehouse_carrier_service'])){
            $data['warehouse_carrier_service'] = $params['warehouse_carrier_service'];
        }
        //功能参数
        $client = new \QimenCloudClient($this->config['client_id'], $this->config['client_secret']);
        $request = new \LiliangdaErpOrderproductDataRequest();
        $request->setAction('queryLogisticsOrderDetail');
        $request->setClassName('Logistics');
        $request->setModule('order');
        $request->setClientId($this->config['client_id']);
        $request->setClientSecret($this->config['client_secret']);
        $request->setToken($this->config['token']);
        $request->setRequestParams(json_encode($data));
        return $client->execute($request);
    }
    
}
