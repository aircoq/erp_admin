<?php
/**
 * Created by PhpStorm.
 * User: XPDN
 * Date: 2017/5/10
 * Time: 14:10
 */

namespace app\publish\task;

use app\common\exception\TaskException;
use app\index\service\AbsTasker;
use app\common\cache\driver\Lock;
use think\Exception;
use app\publish\service\AmazonHeelSaleLogService;
use app\common\cache\Cache;
use Waimao\AmazonMws\AmazonConfig;

class AmazonHeelSaleComplain extends AbsTasker
{
    public  function getName()
    {
        return 'Amazon-投诉管理检测跟卖';
    }

    public  function getDesc()
    {
        return 'Amazon-投诉管理检测跟卖';
    }

    public  function getCreator()
    {
        return 'hao';
    }

    public  function getParamRule()
    {
        return [];
    }

    public  function execute()
    {
        set_time_limit(0);
        try{
            
            $lock = new Lock();
            $startTime = time();
            $useTime = 100;
            $queueUrl = AmazonConfig::$AmazonSqsQueueUrl['AnyOfferChanged'];

            if (!$lock->uniqueLock($queueUrl, $useTime + 60)) {
                return false;
            }
            $service = new AmazonHeelSaleLogService();

            while (true) {
                $service->AmazonHeelSaleComplain($queueUrl);
                $endTime = time();
                if ($endTime - $startTime >= $useTime) {
                    break;
                }
            }

            $lock->uniqueLock($queueUrl,$useTime);
            return true;
        }catch (\Exception $ex){
            $lock->uniqueLock($queueUrl,$useTime);
            throw new TaskException($ex->getMessage());
        }
    }
}