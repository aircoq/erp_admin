<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/4/24
 * Time: 11:00
 */

namespace app\goods\service;

use app\common\cache\Cache;
use app\common\model\GoodsGallery;
use app\common\model\GoodsLang;
use app\common\model\GoodsSkuAlias;
use org\Curl;
use service\shipping\ShippingApi;
use app\common\model\Carrier;
use app\common\model\Goods;
use app\common\model\GoodsSku;
use app\goods\service\GoodsHelp;
use think\Config;
use think\Exception;
use app\warehouse\service\Warehouse;
use think\Db;

class GoodsWinitLian
{
    const LANG_CN = 1;//语言为中文
    const LANG_EN = 2;//语言为英文
    const ON_SALE = 1;//状态为在售
    const CATEGORY_ID = 243;//分类id
    const G_TO_KG = 1000;//千克对克转换
    const MM_TO_CM = 10;//厘米对毫米转换
    const PLATFORM = '{"ebay": 1, "joom": 1, "wish": 1, "amazon": 1, "aliExpress": 1}';//万邑链产品的发布平台
    const DEFAULT_CHANNEL_ID = 0;//goods_gallery默认的channel_id为零

    /**
     * @param $warehouseId int 可以由getWarehouseIds获取
     * 获取万邑链登陆的相关配置
     * @return array
     * @throws Exception
     */
    public function getConf($warehouseId)
    {
        $warehouse = Cache::store('warehouse')->getWarehouse($warehouseId);
        $config = (new Carrier())->getById($warehouse['carrier_id'])->toArray();
        $configure = [
            'index' => $config['index'],
            'accessToken'  =>$config['interface_token'],
            'client_secret'=>'rondaful',
            'carrier_code' =>$config['code'],
        ];
        return $configure;
    }

    /**
     * @param $configure可以由getconf方法获取
     * 获取产品列表
     * @return mixed
     * @throws Exception
     */
    public function getGoodsList($configure,$updateStartDate='',$updateEndDate='',$pageIndex = 1,$pageSize = 100)
    {
        $param = [
            'sku'=>'',
            'updateEndDate'=>$updateEndDate,
            'updateStartDate'=>$updateStartDate
        ];
        $server = ShippingApi::instance()->loader($configure['index']);
        $result = $server->getProductLists($configure,'Y',$param,$pageIndex,$pageSize);
        if ($result['code'] != 0){
            return [];
        }else{
            return $result;
        }
    }

    /**
     * 商品信息存数据库
     * @throws Exception
     */
    public function dataHandle($data)
    {
//        Db::startTrans();
//        try {
//            echo 'handle';
            $data = $data['data']['SPUList'];
            array_walk($data, function ($attr) {
                //处理goods
                $goodsModel = new Goods();
                $goodsData = [
                    'category_id' => self::CATEGORY_ID,
                    //                'spu' => (new GoodsHelp)->createSpu(self::CATEGORY_ID),
                    'keywords' => $attr['keywords'],
                    'description' => $attr['description'],
                    'name' => $attr['chineseName'] . '-' . $attr['SPU'],
                    'alias' => 'B-' . $attr['SPU'],
                    'publish_time' => time(),
                    'platform_sale' => self::PLATFORM,
                    'status' => 1,
                    'sales_status' => 1,
                    'platform' => 31,
                    'platform_old' => '[]',
                ];

                $goodsModelData = $goodsModel->where('alias', $goodsData['alias'])->find();

                //如果没有，则插入新的数据
                if (empty($goodsModelData)) {
                    $goodsData['spu'] = (new GoodsHelp)->createSpu(self::CATEGORY_ID);
                    $goodsModelData = $goodsModel->save($goodsData);
                } else {
                    //                    如果有，则更新数据
                    $goodsModelData->save($goodsData);
                }

                $goodsLang = new GoodsLang();
                $goodsDataLang1 = [
                    'goods_id' => $goodsModelData->id,
                    'description' => $goodsData['description'],
                    'seo_keywords' => str_replace(',', '\n', $attr['keywords']),
                    'tags' => str_replace(',', '\n', $attr['keywords']),
                    'title' => $goodsData['name'],
                    'lang_id' => self::LANG_CN,
                    'selling_point' => '[]',
                ];
                $goodsDataLang = [$goodsDataLang1];
                $englishTitle = $attr['englishName'] ?? $attr['title'];
                if ($englishTitle) {
                    $goodsDataLang2 = $goodsDataLang1;
                    $goodsDataLang2['lang_id'] = self::LANG_EN;
                    $goodsDataLang2['title'] = $englishTitle;
                    $goodsDataLang[] = $goodsDataLang2;
                }

                //                如果重复，则更新数据
                //                if (empty($goodsLang->where('goods_id',$goodsModel->id)->find())){
                $goodsLangData = $goodsLang->where('goods_id', $goodsModelData->id)->find();
                if (empty($goodsLangData)) {
                    $goodsLang->saveAll($goodsDataLang);
                } else {
                    $goodsLang->where(['lang_id' => self::LANG_CN])->where(['goods_id' => $goodsModelData->id])->update($goodsDataLang1);
                    if (isset($goodsDataLang2)) {
                        $goodsLang->where(['lang_id' => self::LANG_EN])->where(['goods_id' => $goodsModelData->id])->update($goodsDataLang2);
                    }
                }

                //                }

                //保存图片，并将图片信息插入
                //TODO 上线时开启
                /**
                 * array_walk($attr['imgList'], function ($url, $key) use ($goodsModel){
                 * $isDefault = $key== 0?true:false;
                 * $data = $this->saveImage($url, $goodsModel, $isDefault);
                 * $goodsGallery = new GoodsGallery();
                 * $goodsGallery->save($data);
                 * });**/

                array_walk($attr['SKUList'], function ($sku) use ($goodsModelData) {
                    $skuModel = new GoodsSku();
                    $skuAlias = new GoodsSkuAlias();
                    // skucode 是我们的sku，alias 是 给我搜索用，言下之意，我们的 sku 和他的 各一条放在这，通过 type 来区分，我们的为1，他的为2
                    $skuData = [
                        //                    'sku' => (new GoodsHelp()) -> createSku($goodsModel->spu, [], $goodsModel->id),
                        'cost_price' => $sku['supplyPrice'],//供货价格
                        'length' => $sku['length'] * self::MM_TO_CM,
                        'weight' => $sku['weight'] * self::G_TO_KG,
                        'width' => $sku['width'] * self::MM_TO_CM,
                        'height' => $sku['height'] * self::MM_TO_CM,
                        'goods_id' => $goodsModelData->id,
                        'alias_sku' => $sku['randomSKU'],
                        'sku_attributes' => '[]',
                        'spu_name' => $goodsModelData->name,
                        'status' => self::ON_SALE,
                    ];

                    $skuModelData = $skuModel->where(['alias_sku' => $sku['randomSKU']])->find();
                    if (empty($skuModelData)) {
                        $skuData['sku'] = (new GoodsHelp())->createSku($goodsModelData->spu, [], $goodsModelData->id);
                        $skuModelData = $skuModel->save($skuData);
                    } else {
                        $skuModel->save($skuData, ['id' => $skuModelData->id]);
                    }

                    $skuAliasData = [
                        [
                            'sku_id' => $skuModelData->id,
                            'sku_code' => $skuModelData->sku,
                            //                        'create_time' => time(),
                            'type' => self::LANG_CN,
                            'alias' => $skuModelData->sku,
                        ],
                        [
                            'sku_id' => $skuModelData->id,
                            'sku_code' => $skuModelData->sku,
                            //                        'create_time' => time(),
                            'type' => self::LANG_EN,
                            'alias' => $sku['randomSKU'],
                        ]
                    ];
                    //先查看是否已经插入了相关的数据，没有，则插入
                    $aliasData = $skuAlias->where(['sku_id'=>$skuModelData->id])->find();
                    var_dump($aliasData);
                    if (empty($aliasData)) {
                        $skuAliasData[0]['create_time'] = $skuAliasData[1]['create_time'] = time();
                        var_dump($skuAliasData);
//                        var_dump($skuAlias->saveAll($skuAliasData));
                        $skuAlias->save($skuAliasData[0]);
                        $skuAlias->save($skuAliasData[1]);
                    }
                });
            });
//            Db::commit();
//        }catch(Exception $ex){
//            Db::rollback();
//            var_dump(json(['message' => $ex->getMessage()], 400));
//        }
    }

    /**
     * 获取warehouse的组成的数组
     * @return array
     */
    public function getWarehouseIds()
    {
        $result = Warehouse::getWarehousesByType(Warehouse::TYPE_WILIAN);
        $warehouseIds = array_map(function ($value){
                return $value->id;
            },$result);
        return $warehouseIds;
    }

    /**
     * 保存图片
     * @param $url string 图片地址
     * @param Goods goodsModel 图片对应的goods
     * @param $isDefault boolean 是否主图
     * @throws Exception
     */
    private function saveImage($url,Goods $goodsModel,$isDefault)
    {
        $imgHandler = new GoodsImageDownloadNewService();
        $goodsInfo = [
            'goods_id' => $goodsModel->id,
            'channelId' => self::DEFAULT_CHANNEL_ID//channel取默认值0就可以了
        ];
        $fileName = implode(array_pop(explode('.',substr(strrchr($url, '/'), 1))));
        $file = [
            'file_name'=>$fileName,
            'file_ext'=>substr(strrchr($url, '.'), 1),
            'file'=>$url,
            'is_default'=>$isDefault,
            'defaultSpuThumb'=>$isDefault//指定主图是哪个
        ];
        $channelId = self::DEFAULT_CHANNEL_ID;
        return $imgHandler->saveImage($goodsInfo, $file, $isSingleThumb = true, $channelId);
    }

}