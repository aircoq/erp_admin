<?php
/**
 * Created by PhpStorm.
 * User: huangweijie
 * Date: 2018/12/27
 * Time: 13:53
 */

namespace Logistics\Query;


use Logistics\Exceptions\HttpException;

abstract class Query
{
    /**
     * 接口地址
     *
     * @var string
     */
    protected $url = '';

    /**
     * 接口响应后格式数据
     *
     * @var array
     */
    protected $response = ['status' => 0, 'message' => 'error'];

    /**
     * cURL 句柄
     *
     * @var resource
     */
    protected $curlHandle;


    private function userAgent()
    {
        $userAgent = [
            // PC
            'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',
            'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',
            'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',
            'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11',
            'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER',
            'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',
            'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36',
            'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36',
            // Phone
            'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',
            'UCWEB7.0.2.37/28/999',
            'MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1'
        ];
        $index = mt_rand(0, count($userAgent) - 1);
        return $userAgent[$index];
    }


    /**
     * 设置cURL选项
     *
     * @param $url
     * @param $params
     * @param int $isPost
     * @param array $header
     */
    protected function setCurlOption($url = '', $params = '', int $isPost = 0, array $header = []): void
    {
        \curl_setopt($this->curlHandle, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);
        \curl_setopt($this->curlHandle, CURLOPT_CONNECTTIMEOUT, 30);
        \curl_setopt($this->curlHandle, CURLOPT_TIMEOUT, 30);
        \curl_setopt($this->curlHandle, CURLOPT_RETURNTRANSFER, true);
        \curl_setopt($this->curlHandle, CURLOPT_SSL_VERIFYPEER, false);
        \curl_setopt($this->curlHandle, CURLOPT_SSL_VERIFYHOST, false);
        if (!empty($header)) {
            \curl_setopt($this->curlHandle, CURLOPT_HTTPHEADER, $header);
        }
        \curl_setopt($this->curlHandle, CURLOPT_USERAGENT, $this->userAgent());
        if ($isPost === 1) {
            \curl_setopt($this->curlHandle, CURLOPT_POST, true);
            \curl_setopt($this->curlHandle, CURLOPT_POSTFIELDS, $params);
            \curl_setopt($this->curlHandle, CURLOPT_URL, $url);
        } else {
            if (!empty($params)) {
                if (is_array($params)) {
                    $params = http_build_query($params);
                }
                \curl_setopt($this->curlHandle, CURLOPT_URL, $url . '?' . $params);
            } else {
                \curl_setopt($this->curlHandle, CURLOPT_URL, $url);
            }
        }
    }


    /**
     * 构建查询
     *
     * @param $url
     * @param $params
     * @param int $isPost
     * @param array $header
     * @return string
     * @throws HttpException
     */
    protected function curl($url = '', $params = '', int $isPost = 0, array $header = []): string
    {
        $this->curlHandle = \curl_init();
        $this->setCurlOption($url, $params, $isPost, $header);
        $response = \curl_exec($this->curlHandle);
        //var_dump(\curl_error($this->curlHandle));exit;
        if ($response === false) {
            throw new HttpException('Request Interface Failure');
        }
        \curl_close($this->curlHandle);
        return $response;
    }

    /**
     * 调用接口查询物流
     *
     * @param string $code 运单号
     * @return array
     */
    abstract public function callInterface(string $code): array;

    /**
     * 格式cURL查询数据
     *
     * @param string $response 接口返回数据
     * @return void
     */
    abstract protected function format(string $response): void;
}